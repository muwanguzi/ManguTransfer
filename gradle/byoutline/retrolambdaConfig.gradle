apply plugin: RetrolambdaDeps

retrolambda {
    def jdkHome = hasProperty('JAVA8_HOME') ? JAVA8_HOME : System.getenv()['JAVA8_HOME']
    def oldJdkHome = hasProperty('JAVA7_HOME') ? JAVA7_HOME : System.getenv()['JAVA7_HOME']
    if (jdkHome == null || oldJdkHome == null) {
        logger.warn('JAVA7_HOME or JAVA8_HOME is not known. ' +
                'Please set it (either in gradle.properties or as enviromental variable) ' +
                'to ensure that retrolambda works correctly')
    } else {
        jdk jdkHome
        oldJdk oldJdkHome
        javaVersion JavaVersion.VERSION_1_7
    }
}

final class RetrolambdaDeps implements Plugin<Project>{

    @Override
    void apply(Project project) {
        addDependencies(project)
        applyPlugins(project)
    }

    private void addDependencies(Project project) {
        project.afterEvaluate {
            def pd = project.dependencies
            pd.add('retrolambdaConfig', 'net.orfjackal.retrolambda:retrolambda:2.3.0')
        }
    }

    private void applyPlugins(Project project) {
        project.configure(project) {
            apply plugin: 'me.tatarka.retrolambda'
        }
    }
}